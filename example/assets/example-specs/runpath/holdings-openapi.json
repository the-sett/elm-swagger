{
  "openapi": "3.0.0",
  "info": {
    "description": "A service for representing parties and their financial owned items\r\n# About\r\n\r\nHoldings is a CRUD API and Data Store where ‘Persons’ and their associated ‘OwnedItems’ are held.  OwnedItems are representations of a Person's various financial interests: these can include Bank Accounts, Mortgages, Loans, Plans etc.\r\n\r\n# Authentication\r\nTo utilise the Holdings Service, a bearer token must be issued along with the request.  \r\n\r\nDetails on how to obtain a bearer token, and how to utilise it as part of the request are detailed in the [Runpath Platform Authentication Guide](/document/PlatformAuthentication).\r\nTo obtain an access token, follow the instructions in the Platform Authentication guide and add the following scopes:  \r\n<br/>\r\nScopes   | \r\n------------- | \r\nholdings.read |\t\r\nholdings.readwrite |\t\r\n",
    "title": "Runpath.Holdings",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://cat.holdings.runpath.com/"
    }
  ],
  "paths": {
    "/PersonSummaries/{organisationId}/{includeChildren}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "organisationId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "includeChildren",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PersonSummary"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PersonSummary"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PersonSummary"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "PersonSummaries"
        ],
        "operationId": "PersonSummaries_GetPersonSummaries"
      }
    },
    "/changerecords": {
      "get": {
        "parameters": [
          {
            "description": "The start date to filter from",
            "in": "query",
            "name": "since",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The level of changes to filter on",
            "in": "query",
            "name": "changeLevel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The owned item type to filter on",
            "in": "query",
            "name": "ownedItemType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ChangeRecord"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ChangeRecord"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ChangeRecord"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "ChangeRecords"
        ],
        "operationId": "ChangeRecords_Get",
        "summary": "Get collection of change records"
      }
    },
    "/contacts/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The contact identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Contacts"
        ],
        "operationId": "Contacts_Delete",
        "summary": "Delete a contact"
      },
      "get": {
        "parameters": [
          {
            "description": "The contact identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Contacts"
        ],
        "operationId": "Contacts_GetById",
        "summary": "Get a contact"
      },
      "put": {
        "parameters": [
          {
            "description": "The contact identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Contacts"
        ],
        "operationId": "Contacts_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            }
          },
          "description": "The identified contact",
          "required": true
        },
        "summary": "Update a user contact"
      }
    },
    "/documents/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The document identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Documents"
        ],
        "operationId": "Documents_Delete",
        "summary": "Delete a document"
      },
      "get": {
        "parameters": [
          {
            "description": "The document identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Documents"
        ],
        "operationId": "Documents_GetById",
        "summary": "Get a document"
      },
      "put": {
        "parameters": [
          {
            "description": "The document identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Documents"
        ],
        "operationId": "Documents_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          },
          "description": "The updated document state",
          "required": true
        },
        "summary": "Update a document"
      }
    },
    "/equities": {
      "get": {
        "parameters": [
          {
            "description": "Equity code to filter on.",
            "in": "query",
            "name": "equityCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Equity Code Scheme. When this is supplied equity code must also be supplied.",
            "in": "query",
            "name": "equityCodeScheme",
            "required": false,
            "schema": {
              "enum": [
                "Sedol",
                "TIDM",
                "ISIN"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Equity"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Equity"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Equity"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Equities"
        ],
        "operationId": "Equities_Get",
        "summary": "Gets an array of all Equities or a subset."
      },
      "put": {
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Equities"
        ],
        "operationId": "Equities_UpdateMany",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Equity"
                },
                "type": "array"
              }
            },
            "text/html": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Equity"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Equity"
                },
                "type": "array"
              }
            }
          },
          "description": "An array of equities to update. The equities to replace are determinded by the equity id.",
          "required": true
        },
        "summary": "Update several equities at once."
      }
    },
    "/equities/Recalculate": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Equities"
        ],
        "operationId": "Equities_Recalculate",
        "summary": "Recalculates the current value of all equities in the system. This is part of an equity import process."
      }
    },
    "/equities/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique identifier of the equity to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Equities"
        ],
        "operationId": "Equities_Delete",
        "summary": "Deletes an equity"
      },
      "get": {
        "parameters": [
          {
            "description": "The unique id of the Equity.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Equity"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Equity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Equity"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Equities"
        ],
        "operationId": "Equities_GetById",
        "summary": "Get Equity by Id."
      },
      "put": {
        "parameters": [
          {
            "description": "The unique indetifier for the equity to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Equities"
        ],
        "operationId": "Equities_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Equity"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Equity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Equity"
              }
            }
          },
          "description": "The equity that will replace the existing equity",
          "required": true
        },
        "summary": "Updates an equity"
      }
    },
    "/events": {
      "get": {
        "parameters": [
          {
            "description": "The start date",
            "in": "query",
            "name": "fromDate",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The end data",
            "in": "query",
            "name": "toDate",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Include notification",
            "in": "query",
            "name": "includeNotifications",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Events"
        ],
        "operationId": "Events_Get",
        "summary": "Get an array of event which can be filtered by"
      }
    },
    "/events/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The unique identifier to get the event by.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Events"
        ],
        "operationId": "Events_GetById",
        "summary": "Gets a single event"
      }
    },
    "/funds": {
      "get": {
        "parameters": [
          {
            "description": "Filter on the fund code. When present code must also be specified.",
            "in": "query",
            "name": "fundCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter on the code. When present the fundCode must also be specified.",
            "in": "query",
            "name": "fundCodeScheme",
            "required": false,
            "schema": {
              "enum": [
                "Citi",
                "Mex",
                "Sedol",
                "ISIN",
                "TIDM"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Fund"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Fund"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Fund"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Funds"
        ],
        "operationId": "Funds_Get",
        "summary": "Gets an array of all funds or a subset of the funds."
      },
      "put": {
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Funds"
        ],
        "operationId": "Funds_UpdateMany",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Fund"
                },
                "type": "array"
              }
            },
            "text/html": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Fund"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/Fund"
                },
                "type": "array"
              }
            }
          },
          "description": "An array of funds to update. The funds to replace are determinded by the fund id.",
          "required": true
        },
        "summary": "Update several funds at once."
      }
    },
    "/funds/Recalculate": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Funds"
        ],
        "operationId": "Funds_Recalculate",
        "summary": "Recalculates the current value of all funds in the system. This is part of an fund import process."
      }
    },
    "/funds/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique identifier of the fund to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Funds"
        ],
        "operationId": "Funds_Delete",
        "summary": "Deletes a fund"
      },
      "get": {
        "parameters": [
          {
            "description": "The fund id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fund"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Fund"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fund"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Funds"
        ],
        "operationId": "Funds_GetById",
        "summary": "Gets a single fund by it's id."
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the fund to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Funds"
        ],
        "operationId": "Funds_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Fund"
              }
            }
          },
          "description": "The fund that is used to replace the existing fund",
          "required": true
        },
        "summary": "Update a single fund."
      }
    },
    "/globalevents": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalEvent"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalEvent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalEvent"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "GlobalEvents"
        ],
        "operationId": "GlobalEvents_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalEvent"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/GlobalEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalEvent"
              }
            }
          },
          "description": "The global event to add",
          "required": true
        },
        "summary": "Add a global event"
      }
    },
    "/globalevents/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique identifier of the global event to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "GlobalEvents"
        ],
        "operationId": "GlobalEvents_Delete",
        "summary": "Deletes a global event"
      },
      "put": {
        "parameters": [
          {
            "description": "The unique identifier of the global event to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "GlobalEvents"
        ],
        "operationId": "GlobalEvents_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalEvent"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/GlobalEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalEvent"
              }
            }
          },
          "required": true
        },
        "summary": "Update a single global event."
      }
    },
    "/goals/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique identifier of the goal to delete.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Goals"
        ],
        "operationId": "Goals_Delete",
        "summary": "Deletes a goal"
      },
      "get": {
        "parameters": [
          {
            "description": "The unique identifier to get the goal with.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Goals"
        ],
        "operationId": "Goals_GetById",
        "summary": "Gets an individual goal."
      },
      "put": {
        "parameters": [
          {
            "description": "The unique identifier of the goal to be updated.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Goals"
        ],
        "operationId": "Goals_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            }
          },
          "description": "The goal that will replace the existing goal.",
          "required": true
        },
        "summary": "Updates a goal"
      }
    },
    "/offeringdetails": {
      "get": {
        "parameters": [
          {
            "description": "The provider Id to filter on. Must be present with offering Type Id.",
            "in": "query",
            "name": "providerId",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The offering Type Id to filter on. Must be present with the provider Id.",
            "in": "query",
            "name": "offeringTypeId",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OfferingDetail"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OfferingDetail"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OfferingDetail"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OfferingDetails"
        ],
        "operationId": "OfferingDetails_Get",
        "summary": "Gets all of the offering details or else filtered by both providerId and OfferingTypeId"
      }
    },
    "/offeringdetails/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The offering detail Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferingDetail"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/OfferingDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferingDetail"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OfferingDetails"
        ],
        "operationId": "OfferingDetails_GetById",
        "summary": "Gets a single offering details by id."
      }
    },
    "/offerings/{id}/systemcontacts": {
      "get": {
        "parameters": [
          {
            "description": "The unique offering identifier to find system contacts with.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SystemContact"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SystemContact"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SystemContact"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Offerings"
        ],
        "operationId": "Offerings_GetSystemContactsForOffering",
        "summary": "Get system contacts that are assigned to an offering"
      },
      "post": {
        "parameters": [
          {
            "description": "The unique identifier of the offering",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemContact"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SystemContact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemContact"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Offerings"
        ],
        "operationId": "Offerings_AddSystemContactToOffering",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemContact"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/SystemContact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemContact"
              }
            }
          },
          "description": "The system contact to add to the offering",
          "required": true
        },
        "summary": "Add a system contact to an offering"
      }
    },
    "/offeringtypes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OfferingType"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OfferingType"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OfferingType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OfferingTypes"
        ],
        "operationId": "OfferingTypes_Get",
        "summary": "Gets all offering types in the system"
      }
    },
    "/offeringtypes/{id}/covertypes": {
      "get": {
        "parameters": [
          {
            "description": "The offering type id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoverType"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoverType"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoverType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OfferingTypes"
        ],
        "operationId": "OfferingTypes_GetCoverTypes",
        "summary": "Get Cover Types by Offering Type Id."
      }
    },
    "/offeringtypes/{id}/providers": {
      "get": {
        "parameters": [
          {
            "description": "The offering type id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Provider"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Provider"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Provider"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OfferingTypes"
        ],
        "operationId": "OfferingTypes_GetProviders",
        "summary": "Get Providers for an offering type."
      }
    },
    "/organisations": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Organisation"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Organisation"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Organisation"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_Get",
        "summary": "Gets all organisations"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          },
          "description": "The organisation to create",
          "required": true
        },
        "summary": "Create a new organisation"
      }
    },
    "/organisations/partners": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrganisationSummary"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrganisationSummary"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrganisationSummary"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_GetPartners",
        "summary": "Get Organisation Hierarchy"
      }
    },
    "/organisations/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique id of the organisation to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_Delete",
        "summary": "Deletes an organisation"
      },
      "get": {
        "parameters": [
          {
            "description": "The unique id of the organisation to get",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_GetById",
        "summary": "Get a single organisation by id."
      },
      "put": {
        "parameters": [
          {
            "description": "The unique organisation id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          },
          "description": "The organisation to replace the existing organisation with",
          "required": true
        },
        "summary": "Update on Organisation"
      }
    },
    "/organisations/{id}/contacts": {
      "get": {
        "parameters": [
          {
            "description": "The unique organisation id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_GetContactsForParty",
        "summary": "Get Contact for an organisation."
      },
      "post": {
        "parameters": [
          {
            "description": "The unique id of the organisation",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContact"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UserContact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContact"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_AddContactToParty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            }
          },
          "description": "The new user contact",
          "required": true
        },
        "summary": "Add a user contact to an organisations."
      }
    },
    "/organisations/{id}/documents": {
      "get": {
        "parameters": [
          {
            "description": "The unique organisation id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_GetDocumentsForParty",
        "summary": "Get Documents for an organisation."
      },
      "post": {
        "parameters": [
          {
            "description": "The unique id of the organisation",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_AddDocumentToParty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          },
          "description": "The new document",
          "required": true
        },
        "summary": "Add a document to an organisation."
      }
    },
    "/organisations/{id}/events": {
      "get": {
        "parameters": [
          {
            "description": "The unique organisation id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_GetEventsForParty",
        "summary": "Get Events for an organisation"
      }
    },
    "/organisations/{id}/goals": {
      "get": {
        "parameters": [
          {
            "description": "The unique organisation id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Goal"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Goal"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Goal"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_GetGoalsForParty",
        "summary": "Get Goals for an organisation"
      },
      "post": {
        "parameters": [
          {
            "description": "The unique id of the organisation",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_AddGoalToParty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            }
          },
          "description": "The Goal to add to the organisation",
          "required": true
        },
        "summary": "Add a goal to an organisation."
      }
    },
    "/organisations/{id}/persons": {
      "get": {
        "parameters": [
          {
            "description": "The unique organisation id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_GetPersonsForOrganisation",
        "summary": "Get persons that are referred by this organisation"
      }
    },
    "/organisations/{id}/userevents": {
      "post": {
        "parameters": [
          {
            "description": "The unique id of the organisation",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEvent"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UserEvent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEvent"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Organisations"
        ],
        "operationId": "Organisations_AddUserEventToParty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            }
          },
          "description": "The user event to add to the organisation",
          "required": true
        },
        "summary": "Add a user event to an organisation"
      }
    },
    "/owneditems": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            }
          },
          "description": "The owned item to create",
          "required": true
        },
        "summary": "Add a new owned item"
      }
    },
    "/owneditems/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The owned item identifer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_Delete",
        "summary": "Delete an owned item"
      },
      "get": {
        "parameters": [
          {
            "description": "The owned item identifer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_GetById",
        "summary": "Get an owned item"
      },
      "head": {
        "parameters": [
          {
            "description": "The owned item identifer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_GetByIdHead",
        "summary": "Get an owned item"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the existing owned item",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            }
          },
          "description": "The owned item that replaces the existing owned item",
          "required": true
        },
        "summary": "Updates an existing owned item"
      }
    },
    "/owneditems/{id}/contacts": {
      "get": {
        "parameters": [
          {
            "description": "The owned item identifer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_GetContactsForOwnedItem",
        "summary": "Get contacts for an owned item"
      },
      "post": {
        "parameters": [
          {
            "description": "The owned item identifer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContact"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UserContact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContact"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_AddContactToOwnedItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            }
          },
          "description": "The user contact",
          "required": true
        },
        "summary": "Add a contact to an owned item"
      }
    },
    "/owneditems/{id}/documents": {
      "get": {
        "parameters": [
          {
            "description": "The owned item identifer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_GetDocumentsForOwnedItem",
        "summary": "Get documents for an owned item"
      },
      "post": {
        "parameters": [
          {
            "description": "The owned item identifer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_AddDocumentToOwnedItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          },
          "description": "the document to be added",
          "required": true
        },
        "summary": "Add a document to an owned item"
      }
    },
    "/owneditems/{id}/events": {
      "get": {
        "parameters": [
          {
            "description": "The owned item identifer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_GetEventsForOwnedItem",
        "summary": "Get events for an owned item"
      }
    },
    "/owneditems/{id}/systemevents": {
      "post": {
        "parameters": [
          {
            "description": "The owned item identifer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemEvent"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SystemEvent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemEvent"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_AddSystemEventToOwnedItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemEvent"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/SystemEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemEvent"
              }
            }
          },
          "description": "The system event to be added",
          "required": true
        },
        "summary": "Add a system event to an owned item."
      }
    },
    "/owneditems/{id}/userevents": {
      "post": {
        "parameters": [
          {
            "description": "The owned item identifer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEvent"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UserEvent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEvent"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_AddUserEventToOwnedItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            }
          },
          "description": "The user event to be added",
          "required": true
        },
        "summary": "Add user event to an owned item"
      }
    },
    "/owneditems/{ownedItemId}/permissions/{partnerId}": {
      "get": {
        "parameters": [
          {
            "description": "The id of the owned item",
            "in": "path",
            "name": "ownedItemId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The id of the partner",
            "in": "path",
            "name": "partnerId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "OwnedItems"
        ],
        "operationId": "OwnedItems_CanAccessOwnedItem",
        "summary": "Checks if partner can access  owned item"
      }
    },
    "/parties/{partyId}/permissions/{partnerId}": {
      "get": {
        "parameters": [
          {
            "description": "The id of the party",
            "in": "path",
            "name": "partyId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The id of the partner",
            "in": "path",
            "name": "partnerId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Parties"
        ],
        "operationId": "Parties_CanAccessParty",
        "summary": "Checks if partner can access party"
      }
    },
    "/persons": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_Get",
        "summary": "Gets all persons"
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          },
          "description": "The person to create",
          "required": true
        },
        "summary": "Create a new person"
      }
    },
    "/persons/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique id of the person to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_Delete",
        "summary": "Deletes a person"
      },
      "get": {
        "parameters": [
          {
            "description": "The unique id of the person to get",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_GetById",
        "summary": "Get a single person by id."
      },
      "head": {
        "parameters": [
          {
            "description": "The unique id of the person to get",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_GetByIdHead",
        "summary": "Get a single person by id."
      },
      "put": {
        "parameters": [
          {
            "description": "The unique person id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          },
          "description": "The person to replace the existing person",
          "required": true
        },
        "summary": "Update a person"
      }
    },
    "/persons/{id}/contacts": {
      "get": {
        "parameters": [
          {
            "description": "The unique person id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_GetContactsForPerson",
        "summary": "Get Contact for a person."
      },
      "post": {
        "parameters": [
          {
            "description": "The unique id of the person",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContact"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UserContact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContact"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_AddContactToPerson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            }
          },
          "description": "The new user contact",
          "required": true
        },
        "summary": "Add a user contact to an person."
      }
    },
    "/persons/{id}/documents": {
      "get": {
        "parameters": [
          {
            "description": "the unique person id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_GetDocumentsForPerson",
        "summary": "Get documents for a person"
      },
      "post": {
        "parameters": [
          {
            "description": "The unique id of the person",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_AddDocumentToPerson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          },
          "description": "The new document",
          "required": true
        },
        "summary": "Add a document to a person."
      }
    },
    "/persons/{id}/events": {
      "get": {
        "parameters": [
          {
            "description": "the unique person id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_GetEventsForPerson",
        "summary": "Get Events for a person"
      }
    },
    "/persons/{id}/goals": {
      "get": {
        "parameters": [
          {
            "description": "the unique person id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Goal"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Goal"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Goal"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_GetGoalsForPerson",
        "summary": "Get goals for a person"
      },
      "post": {
        "parameters": [
          {
            "description": "The unique id of the person",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_AddGoalToPerson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            }
          },
          "description": "The Goal to add to the person",
          "required": true
        },
        "summary": "Add a goal to a person."
      }
    },
    "/persons/{id}/ownedItems/{ownedItemId}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique id of the person who owns the owned item",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The unique id of the owned item to delete",
            "in": "path",
            "name": "ownedItemId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_DeleteOwnedItemForPerson",
        "summary": "Delete owned item for a person"
      },
      "put": {
        "parameters": [
          {
            "description": "The unique person id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The unique owned item id",
            "in": "path",
            "name": "ownedItemId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_UpdateOwnedItemForPerson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            }
          },
          "description": "Th eowned item id to replace the existing owned item id",
          "required": true
        },
        "summary": "Update an owned item for this person"
      }
    },
    "/persons/{id}/owneditems": {
      "get": {
        "parameters": [
          {
            "description": "the unique person id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OwnedItem"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OwnedItem"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OwnedItem"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_GetOwnedItemsForPerson",
        "summary": "Get owned items for a person"
      },
      "post": {
        "parameters": [
          {
            "description": "The unique id of the person",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_AddOwnedItemToPerson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnedItem"
              }
            }
          },
          "description": "The owned item to be added",
          "required": true
        },
        "summary": "Add an owned item to a person"
      }
    },
    "/persons/{id}/owneditems/{ownedItemId}": {
      "get": {
        "parameters": [
          {
            "description": "The unique person id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The unqiue owned item id",
            "in": "path",
            "name": "ownedItemId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnedItem"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_GetOwnedItemForPersonById",
        "summary": "Get Owned items by id for a person"
      }
    },
    "/persons/{id}/userevents": {
      "post": {
        "parameters": [
          {
            "description": "The unique id of the person",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEvent"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UserEvent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEvent"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_AddUserEventToPerson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            }
          },
          "description": "The user event to add to the person",
          "required": true
        },
        "summary": "Add a user event to a person"
      }
    },
    "/providers": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Provider"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Provider"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Provider"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_Get",
        "summary": "Get all of the Providers."
      }
    },
    "/providers/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The provider id to get.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_GetById",
        "summary": "Get a single provider."
      }
    },
    "/providers/{id}/offeringtypes": {
      "get": {
        "parameters": [
          {
            "description": "The unqiue identifier of the provider.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OfferingType"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OfferingType"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OfferingType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_GetOfferingTypes",
        "summary": "Get offering types associated with this provider."
      }
    },
    "/providers/{id}/systemcontacts": {
      "get": {
        "parameters": [
          {
            "description": "The unique identifier of the provider.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SystemContact"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SystemContact"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SystemContact"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Providers"
        ],
        "operationId": "Providers_GetSystemContacts",
        "summary": "Get system contacts associated with this provider."
      }
    },
    "/systemcontacts/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique id of a system contact to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "SystemContact"
        ],
        "operationId": "SystemContact_Delete",
        "summary": "Deletes a system contact"
      },
      "put": {
        "parameters": [
          {
            "description": "The unique id of the system contact",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "SystemContact"
        ],
        "operationId": "SystemContact_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemContact"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/SystemContact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemContact"
              }
            }
          },
          "description": "The system contact that will be used to replace the existing one",
          "required": true
        },
        "summary": "Update a system contact"
      }
    },
    "/systemevents/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique id of the system event to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "SystemEvents"
        ],
        "operationId": "SystemEvents_Delete",
        "summary": "Deletes a system event."
      },
      "put": {
        "parameters": [
          {
            "description": "The unique id of the system event to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "SystemEvents"
        ],
        "operationId": "SystemEvents_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemEvent"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/SystemEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemEvent"
              }
            }
          },
          "description": "The system event to replace the existing system event with.",
          "required": true
        },
        "summary": "Update a system event."
      }
    },
    "/userevents/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique id of the user event to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "UserEvents"
        ],
        "operationId": "UserEvents_Delete",
        "summary": "Deletes a user event"
      },
      "put": {
        "parameters": [
          {
            "description": "The unique id of the user event to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "UserEvents"
        ],
        "operationId": "UserEvents_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEvent"
              }
            }
          },
          "description": "The userEvent that will replace the existing user event",
          "required": true
        },
        "summary": "Updates a user event"
      }
    },
    "/usersinorganisations": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  },
                  "type": "array"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "UsersInOrganisations"
        ],
        "operationId": "UsersInOrganisations_Get",
        "summary": "Gets all of the users in organisations."
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersInOrganisation"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UsersInOrganisation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersInOrganisation"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "UsersInOrganisations"
        ],
        "operationId": "UsersInOrganisations_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersInOrganisation"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/UsersInOrganisation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersInOrganisation"
              }
            }
          },
          "description": "The single usersInOrganisation to create.",
          "required": true
        },
        "summary": "Create a single Users In Organisation entry"
      }
    },
    "/usersinorganisations/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The unique id of the users in Organisation to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "UsersInOrganisations"
        ],
        "operationId": "UsersInOrganisations_Delete",
        "summary": "Delets a Users In Organisation"
      },
      "get": {
        "parameters": [
          {
            "description": "The unqiue id of the user in organisation to retrieve",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersInOrganisation"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UsersInOrganisation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersInOrganisation"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "UsersInOrganisations"
        ],
        "operationId": "UsersInOrganisations_GetById",
        "summary": "Gets a single users in organisation"
      },
      "put": {
        "parameters": [
          {
            "description": "The unique id of the usersInOrganisation to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "UsersInOrganisations"
        ],
        "operationId": "UsersInOrganisations_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersInOrganisation"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/UsersInOrganisation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersInOrganisation"
              }
            }
          },
          "description": "The usersINOrganisation that replaces the existing one",
          "required": true
        },
        "summary": "Updates a usersInOrganisation"
      }
    }
  },
  "components": {
    "requestBodies": {
      "Document": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "text/html": {
            "schema": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/Document"
            }
          }
        },
        "description": "The new document",
        "required": true
      },
      "UserContact": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserContact"
            }
          },
          "text/html": {
            "schema": {
              "$ref": "#/components/schemas/UserContact"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/UserContact"
            }
          }
        },
        "description": "The new user contact",
        "required": true
      }
    },
    "schemas": {
      "Address": {
        "properties": {
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "durationMonths": {
            "format": "int32",
            "type": "integer"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "flat": {
            "type": "string"
          },
          "houseName": {
            "type": "string"
          },
          "houseNumber": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "isDefault": {
            "type": "boolean"
          },
          "itemValidDate": {
            "format": "date-time",
            "type": "string"
          },
          "itemValidMethod": {
            "enum": [
              "Unspecified",
              "Provider",
              "PostcodeAddressFile",
              "Referrer",
              "User",
              "Other"
            ],
            "type": "string"
          },
          "line1": {
            "type": "string"
          },
          "line2": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "purpose": {
            "enum": [
              "Unspecified",
              "MainHome",
              "WeekdayHome",
              "WeekendHome",
              "HolidayHome",
              "NewHome",
              "Business",
              "Rental",
              "Temporary",
              "PartnerHome",
              "Other",
              "PreviousAddress",
              "Commercial"
            ],
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "streetName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdverseFinancial": {
        "properties": {
          "adverseType": {
            "enum": [
              "Unspecified",
              "Judgment",
              "SetAsideJudgment",
              "SatisfiedJudgment",
              "CsaJudgment",
              "CsaSetAside",
              "CsaSatisfied",
              "OrderOfDischarge",
              "AdministrationOrder",
              "Sequestration",
              "SetAsideAdminOrder",
              "BankruptcyOrder",
              "CertificateOfUnenforceability",
              "SatisfiedAdministrationOrder",
              "BankruptcyOrderAnnulled",
              "VoluntaryArrangement",
              "VoluntaryArrangementCompleted",
              "IrishAdjunction",
              "AdjudicationAnnulled",
              "OrderOfDischargeNI",
              "OrderOfDischargeSuspended",
              "Unknown",
              "BillOfSale",
              "SatisfactionOfBillOfSale",
              "DiscoveryOrder",
              "SatisfiedDiscoveryOrder",
              "BankruptcyRestrictionOrder",
              "BankruptcyRestrictionUndertaking",
              "IncomePaymentOrder",
              "IncomePaymentAgreement",
              "FastTrackVoluntaryArrangement",
              "DebtArrangement",
              "DebtArrangementDischarge",
              "Inhibition",
              "InhibitionDismissed",
              "ScottishTrustDeed",
              "ConfiscationOrder",
              "DebtReliefOrder",
              "TaxLien",
              "HighCourtJudgment",
              "HighCourtJudgmentSatisfied",
              "HighCourtJudgmentSetAside",
              "DebtReliefeRestrictionOrder",
              "DebtReliefeRestrictionUndertaking",
              "Bankruptcy",
              "TransferredToDefault",
              "TracedAccount",
              "Repossession",
              "Default",
              "SlowPayer",
              "LoanFromMoneyLenders",
              "CMGJudgement",
              "CMGSetAside",
              "CMGSatisfied",
              "ReceivingOrder",
              "NoticeOfBankruptcy",
              "ReceivingOrderRescinded",
              "AdministrationOrderRevoked",
              "AdministrationOrderVaried",
              "BankruptcyPetition",
              "PetitionDismissed",
              "TrusteesAppointed",
              "DeedOfArrangement",
              "ArrangementSuspended",
              "VoluntaryArrangementFailed",
              "ConditionalOrderOfDischarge",
              "OrderOfDischargeRescinded",
              "OrderOfDischargeVaried",
              "OrderOfDischargeRevoked"
            ],
            "type": "string"
          },
          "amount": {
            "format": "double",
            "type": "number"
          },
          "caseReference": {
            "type": "string"
          },
          "courtName": {
            "type": "string"
          },
          "currentAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "recordedDate": {
            "format": "date-time",
            "type": "string"
          },
          "satisfiedDate": {
            "format": "date-time",
            "type": "string"
          },
          "title": {
            "enum": [
              "Unspecified",
              "Mr",
              "Mrs",
              "Miss",
              "Ms",
              "Sir",
              "Rev",
              "Dr",
              "Master",
              "Professor",
              "Other"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Balance": {
        "properties": {
          "balanceType": {
            "enum": [
              "Unspecified",
              "InterimAvailable",
              "InterimBooked",
              "OpeningAvailable",
              "OpeningBooked",
              "ClosingAvailable",
              "ClosingBooked",
              "Expected",
              "ForwardAvailable",
              "Information",
              "PreviouslyClosedBooked"
            ],
            "type": "string"
          },
          "value": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "BankAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountClosedDate": {
                "format": "date-time",
                "type": "string"
              },
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "balances": {
                "items": {
                  "$ref": "#/components/schemas/Balance"
                },
                "type": "array"
              },
              "branchName": {
                "type": "string"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "creditHistories": {
                "items": {
                  "$ref": "#/components/schemas/CreditHistory"
                },
                "type": "array"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "iban": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "incomes": {
                "items": {
                  "$ref": "#/components/schemas/Income"
                },
                "type": "array"
              },
              "interestBasis": {
                "enum": [
                  "Unspecified",
                  "Guaranteed",
                  "Variable",
                  "Tracker",
                  "Fixed",
                  "Other"
                ],
                "type": "string"
              },
              "interestRate": {
                "format": "double",
                "type": "number"
              },
              "interestRateExpiryDate": {
                "format": "date-time",
                "type": "string"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isJoint": {
                "type": "boolean"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "noticePeriodDays": {
                "format": "int32",
                "type": "integer"
              },
              "offeringType": {
                "type": "string"
              },
              "overdraftLimit": {
                "format": "double",
                "type": "number"
              },
              "ownershipMatch": {
                "type": "boolean"
              },
              "ownershipMatchScore": {
                "format": "int32",
                "type": "integer"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "rates": {
                "items": {
                  "$ref": "#/components/schemas/Rate"
                },
                "type": "array"
              },
              "reference": {
                "type": "string"
              },
              "sortCode": {
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "taxStatus": {
                "enum": [
                  "Unspecified",
                  "TaxFree",
                  "TaxablePaidGross",
                  "TaxablePaidNet"
                ],
                "type": "string"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Beneficiary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InterestedParty"
          },
          {
            "properties": {
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              },
              "proportion": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "ChangeRecord": {
        "properties": {},
        "type": "object"
      },
      "Contact": {
        "discriminator": {
          "propertyName": "$type"
        },
        "properties": {
          "$type": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "companyName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "faxNumber": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          },
          "telephoneNumber": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "website": {
            "type": "string"
          }
        },
        "required": [
          "$type"
        ],
        "type": "object"
      },
      "CoverType": {
        "properties": {
          "coverType1": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "isLumpSumBenefitAllowed": {
            "type": "boolean"
          },
          "isPartyCover": {
            "type": "boolean"
          },
          "isRegularBenefitAllowed": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CreditCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "apr": {
                "format": "double",
                "type": "number"
              },
              "association": {
                "enum": [
                  "Unspecified",
                  "AmericanExpress",
                  "DinersClub",
                  "Mastercard",
                  "Visa",
                  "Other"
                ],
                "type": "string"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "creditHistories": {
                "items": {
                  "$ref": "#/components/schemas/CreditHistory"
                },
                "type": "array"
              },
              "creditLimitAmount": {
                "format": "double",
                "type": "number"
              },
              "creditLimitHistories": {
                "items": {
                  "$ref": "#/components/schemas/CreditLimitHistory"
                },
                "type": "array"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "initialRate": {
                "format": "double",
                "type": "number"
              },
              "initialRateExpiryDate": {
                "format": "date-time",
                "type": "string"
              },
              "interestBasis": {
                "enum": [
                  "Unspecified",
                  "Capped",
                  "Discounted",
                  "Fixed",
                  "StandardVariable",
                  "Tracker",
                  "Other"
                ],
                "type": "string"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "offeringType": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "rates": {
                "items": {
                  "$ref": "#/components/schemas/Rate"
                },
                "type": "array"
              },
              "reference": {
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "CreditHistory": {
        "properties": {
          "balance": {
            "format": "double",
            "type": "number"
          },
          "cashAdvanceAmountInMonth": {
            "format": "double",
            "type": "number"
          },
          "cashAdvancesInMonth": {
            "format": "int32",
            "type": "integer"
          },
          "isPromotionalPeriod": {
            "type": "boolean"
          },
          "itemValidDate": {
            "format": "date-time",
            "type": "string"
          },
          "itemValidMethod": {
            "enum": [
              "Unspecified",
              "BulkData",
              "ContractEnquiry",
              "DocumentScan",
              "Extranet",
              "Manual",
              "Initial",
              "Other",
              "User",
              "Email",
              "Telephone",
              "Notes",
              "Bureau"
            ],
            "type": "string"
          },
          "paymentAmount": {
            "format": "double",
            "type": "number"
          },
          "paymentAmountPrevious": {
            "format": "double",
            "type": "number"
          },
          "status": {
            "enum": [
              "Satisfactory",
              "Delinquent1Month",
              "Delinquent2Months",
              "Delinquent3Months",
              "Delinquent4Months",
              "Delinquent5Months",
              "Delinquent6Months",
              "Default",
              "BadDebt",
              "SlowPayer",
              "Unclassified",
              "Dormant",
              "Unknown",
              "Unspecified"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreditLimitHistory": {
        "properties": {
          "amount": {
            "format": "double",
            "type": "number"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CreditSearch": {
        "properties": {
          "amount": {
            "format": "double",
            "type": "number"
          },
          "authority": {
            "enum": [
              "ExperianEcs",
              "MercerHealth",
              "MercerMoney",
              "ExperianOrganisation",
              "ExperianAuthenticateScore"
            ],
            "type": "string"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "isJoint": {
            "type": "boolean"
          },
          "ownedItemType": {
            "enum": [
              "Unspecified",
              "InvestmentSaving",
              "RetirementSaving",
              "BankAccount",
              "Mortgage",
              "Loan",
              "Protection",
              "Wrap",
              "CreditCard",
              "Insurance",
              "InvestmentIncome",
              "RetirementIncome",
              "Will",
              "Property",
              "CustomEquity",
              "SystemEquity",
              "Motor",
              "OtherAsset",
              "Utility",
              "Portfolio",
              "GeneralInformation",
              "OtherService",
              "Rental"
            ],
            "type": "string"
          },
          "providerName": {
            "type": "string"
          },
          "termMonths": {
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "enum": [
              "Unspecified",
              "Quotation",
              "Application",
              "Consumer",
              "Other"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomEquity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "customCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "numberOfShares": {
                "format": "double",
                "type": "number"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "priceDate": {
                "format": "date-time",
                "type": "string"
              },
              "purchasePrice": {
                "format": "double",
                "type": "number"
              },
              "reference": {
                "type": "string"
              },
              "saleDate": {
                "format": "date-time",
                "type": "string"
              },
              "sharesCurrentDate": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              },
              "valuePrice": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "CustomFund": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedFund"
          },
          {
            "properties": {
              "currencyCode": {
                "type": "string"
              },
              "customCode": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "originalValue": {
                "format": "double",
                "type": "number"
              },
              "priceDate": {
                "format": "date-time",
                "type": "string"
              },
              "purchaseDate": {
                "format": "date-time",
                "type": "string"
              },
              "purchasePrice": {
                "format": "double",
                "type": "number"
              },
              "quantity": {
                "format": "double",
                "type": "number"
              },
              "unitsCurrentDate": {
                "format": "date-time",
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              },
              "valuePrice": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Director": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RelatedParty"
          },
          {
            "properties": {
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "relatedPartyId": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Document": {
        "properties": {
          "contentType": {
            "type": "string"
          },
          "data": {
            "format": "byte",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "isPartyEditable": {
            "type": "boolean"
          },
          "isPartyVisible": {
            "type": "boolean"
          },
          "ownedItemId": {
            "format": "int32",
            "type": "integer"
          },
          "partyId": {
            "format": "int32",
            "type": "integer"
          },
          "purpose": {
            "enum": [
              "Unspecified",
              "LetterOfAuthority",
              "QuotationDocument",
              "PlanProjection",
              "ApplicationForm",
              "OfferLetter",
              "PolicyDocument",
              "ContractNote",
              "InsuranceDocument",
              "ShareCertificate",
              "Certificate",
              "UtilityDocument",
              "GuaranteeInformation",
              "RenewalDocument",
              "IndexationOption",
              "GeneralInformation",
              "PolicyInformation",
              "AnnualStatement",
              "BenefitStatement",
              "PlanStatement",
              "MortgageStatement",
              "SurrenderDocument",
              "PolicyMaturity",
              "PolicyCancellation",
              "AgencyTransferAwayNotification",
              "CashInOption",
              "DirectDebitCancellation",
              "OutstandingPremiumNotification",
              "CommissionStatement",
              "BusinessReport",
              "ClientReport",
              "Other"
            ],
            "type": "string"
          },
          "scanStatus": {
            "enum": [
              "Unscanned",
              "Scanned",
              "VirusSuspected"
            ],
            "type": "string"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "storageId": {
            "type": "string"
          },
          "uploadedDate": {
            "format": "date-time",
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Email": {
        "properties": {
          "address": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "isDefault": {
            "type": "boolean"
          },
          "purpose": {
            "enum": [
              "Unspecified",
              "Employment",
              "Social",
              "Family"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Employer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RelatedParty"
          },
          {
            "properties": {
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "relatedPartyId": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Employment": {
        "properties": {
          "continuousStartDate": {
            "format": "date-time",
            "type": "string"
          },
          "employerId": {
            "format": "int32",
            "type": "integer"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "jobTitle": {
            "type": "string"
          },
          "payeCode": {
            "type": "string"
          },
          "salaries": {
            "items": {
              "$ref": "#/components/schemas/Salary"
            },
            "type": "array"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "Unspecified",
              "Previous",
              "Current",
              "Future"
            ],
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "type": {
            "enum": [
              "Unspecified",
              "Apprentice",
              "SelfEmployed",
              "Employed",
              "Director",
              "EmployeeShareholder",
              "OfficeHolder",
              "VicePresident",
              "ChiefOfficer",
              "Partner",
              "Owner"
            ],
            "type": "string"
          },
          "unlistedEmployerName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Equity": {
        "properties": {
          "askPrice": {
            "format": "double",
            "type": "number"
          },
          "baseCurrencyCode": {
            "type": "string"
          },
          "bidPrice": {
            "format": "double",
            "type": "number"
          },
          "changeAmount": {
            "format": "double",
            "type": "number"
          },
          "changePercent": {
            "format": "double",
            "type": "number"
          },
          "currencyCode": {
            "type": "string"
          },
          "exchangeRate": {
            "format": "double",
            "type": "number"
          },
          "highestPrice": {
            "format": "double",
            "type": "number"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "instrument": {
            "type": "string"
          },
          "lowestPrice": {
            "format": "double",
            "type": "number"
          },
          "midPrice": {
            "format": "double",
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "openPrice": {
            "format": "double",
            "type": "number"
          },
          "previousClosePrice": {
            "format": "double",
            "type": "number"
          },
          "priceDate": {
            "format": "date-time",
            "type": "string"
          },
          "quotedPrice": {
            "format": "double",
            "type": "number"
          },
          "sedolCode": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "tIdMCode": {
            "type": "string"
          },
          "valuePrice": {
            "format": "double",
            "type": "number"
          },
          "volume": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Event": {
        "discriminator": {
          "propertyName": "$type"
        },
        "properties": {
          "$type": {
            "type": "string"
          },
          "createdDate": {
            "format": "date-time",
            "type": "string"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "notes": {
            "type": "string"
          },
          "notifications": {
            "items": {
              "$ref": "#/components/schemas/Notification"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "$type"
        ],
        "type": "object"
      },
      "Exclusion": {
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Fee": {
        "properties": {
          "amount": {
            "format": "double",
            "type": "number"
          },
          "amountFrequency": {
            "enum": [
              "Unspecified",
              "Weekly",
              "Monthly",
              "Quarterly",
              "HalfYearly",
              "Yearly",
              "Other",
              "None"
            ],
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "modelCode": {
            "type": "string"
          },
          "percent": {
            "format": "double",
            "type": "number"
          },
          "percentFrequency": {
            "enum": [
              "Unspecified",
              "Weekly",
              "Monthly",
              "Quarterly",
              "HalfYearly",
              "Yearly",
              "Other",
              "None"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Fund": {
        "properties": {
          "baseCurrencyCode": {
            "type": "string"
          },
          "bidPrice": {
            "format": "double",
            "type": "number"
          },
          "changeAmount": {
            "format": "double",
            "type": "number"
          },
          "changePercent": {
            "format": "double",
            "type": "number"
          },
          "citiCode": {
            "type": "string"
          },
          "exchangeRate": {
            "format": "double",
            "type": "number"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "isinCode": {
            "type": "string"
          },
          "manager": {
            "type": "string"
          },
          "managerCode": {
            "type": "string"
          },
          "mexCode": {
            "type": "string"
          },
          "midPrice": {
            "format": "double",
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "offerPrice": {
            "format": "double",
            "type": "number"
          },
          "priceDate": {
            "format": "date-time",
            "type": "string"
          },
          "quotedPrice": {
            "format": "double",
            "type": "number"
          },
          "sedolCode": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "universe": {
            "type": "string"
          },
          "valuePrice": {
            "format": "double",
            "type": "number"
          },
          "yieldPercent": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GeneralInformation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "endDate": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "reference": {
                "type": "string"
              },
              "reviewDate": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "GlobalEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "properties": {
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "dueDate": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "notes": {
                "type": "string"
              },
              "notifications": {
                "items": {
                  "$ref": "#/components/schemas/Notification"
                },
                "type": "array"
              },
              "title": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Goal": {
        "properties": {
          "currencyCode": {
            "type": "string"
          },
          "goalOwnedItems": {
            "items": {
              "$ref": "#/components/schemas/GoalOwnedItem"
            },
            "type": "array"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "partyId": {
            "format": "int32",
            "type": "integer"
          },
          "purpose": {
            "enum": [
              "Unspecified",
              "Retirement",
              "Car",
              "Wedding",
              "Occasion",
              "Education",
              "Holiday",
              "Business",
              "Repayment",
              "Other"
            ],
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "targetAmount": {
            "format": "double",
            "type": "number"
          },
          "targetDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoalOwnedItem": {
        "properties": {
          "allocatedAmount": {
            "format": "double",
            "type": "number"
          },
          "allocatedPercent": {
            "format": "double",
            "type": "number"
          },
          "futureGrowthPercent": {
            "format": "double",
            "type": "number"
          },
          "goalId": {
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "ownedItemId": {
            "format": "int32",
            "type": "integer"
          },
          "startAmount": {
            "format": "double",
            "type": "number"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Identifier": {
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "itemValidDate": {
            "format": "date-time",
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "scheme": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Income": {
        "discriminator": {
          "propertyName": "$type"
        },
        "properties": {
          "$type": {
            "type": "string"
          },
          "amount": {
            "format": "double",
            "type": "number"
          },
          "currencyCode": {
            "type": "string"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "$type"
        ],
        "type": "object"
      },
      "Insurance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "ceasedDate": {
                "format": "date-time",
                "type": "string"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "creditHistories": {
                "items": {
                  "$ref": "#/components/schemas/CreditHistory"
                },
                "type": "array"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "endDate": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "noClaimsDiscountYears": {
                "format": "int32",
                "type": "integer"
              },
              "offeringType": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "riskGroups": {
                "items": {
                  "$ref": "#/components/schemas/RiskGroup"
                },
                "type": "array"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "InterestedParty": {
        "discriminator": {
          "propertyName": "$type"
        },
        "properties": {
          "$type": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "partyId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "$type"
        ],
        "type": "object"
      },
      "InvestmentIncome": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "guaranteedPeriodEndDate": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "incomes": {
                "items": {
                  "$ref": "#/components/schemas/Income"
                },
                "type": "array"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "offeringType": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "InvestmentSaving": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "basicSumAssured": {
                "format": "double",
                "type": "number"
              },
              "bonusDate": {
                "format": "date-time",
                "type": "string"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "deathReturnType": {
                "enum": [
                  "Unspecified",
                  "ReturnOfFundValue",
                  "ReturnOfPremiumsPaid",
                  "Other"
                ],
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "incomes": {
                "items": {
                  "$ref": "#/components/schemas/Income"
                },
                "type": "array"
              },
              "interestBasis": {
                "enum": [
                  "Unspecified",
                  "Guaranteed",
                  "Variable",
                  "Tracker",
                  "Fixed",
                  "Other"
                ],
                "type": "string"
              },
              "interestPaidAmount": {
                "format": "double",
                "type": "number"
              },
              "interestRate": {
                "format": "double",
                "type": "number"
              },
              "interestRateExpiryDate": {
                "format": "date-time",
                "type": "string"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "maturityDate": {
                "format": "date-time",
                "type": "string"
              },
              "noticePeriodDays": {
                "format": "int32",
                "type": "integer"
              },
              "offeringType": {
                "type": "string"
              },
              "ownedFunds": {
                "items": {
                  "$ref": "#/components/schemas/OwnedFund"
                },
                "type": "array"
              },
              "paidUpDate": {
                "format": "date-time",
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "providerValuationAmount": {
                "format": "double",
                "type": "number"
              },
              "providerValuationDate": {
                "format": "date-time",
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "riskGroups": {
                "items": {
                  "$ref": "#/components/schemas/RiskGroup"
                },
                "type": "array"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "surrenderValueAmount": {
                "format": "double",
                "type": "number"
              },
              "surrenderValueDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "taxStatus": {
                "enum": [
                  "Unspecified",
                  "TaxFree",
                  "TaxablePaidGross",
                  "TaxablePaidNet"
                ],
                "type": "string"
              },
              "totalBonusAmount": {
                "format": "double",
                "type": "number"
              },
              "totalPaymentsAmount": {
                "format": "double",
                "type": "number"
              },
              "totalPaymentsDate": {
                "format": "date-time",
                "type": "string"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Loan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "apr": {
                "format": "double",
                "type": "number"
              },
              "borrowedAmount": {
                "format": "double",
                "type": "number"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "creditHistories": {
                "items": {
                  "$ref": "#/components/schemas/CreditHistory"
                },
                "type": "array"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "dateRepaid": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "holdingId": {
                "format": "int32",
                "type": "integer"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestBasis": {
                "enum": [
                  "Unspecified",
                  "Capped",
                  "Discounted",
                  "Fixed",
                  "Flexible",
                  "StandardVariable",
                  "Tracker",
                  "Variable",
                  "Other"
                ],
                "type": "string"
              },
              "interestRate": {
                "format": "double",
                "type": "number"
              },
              "interestRateExpiryDate": {
                "format": "date-time",
                "type": "string"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isLoanRepaidOnDeath": {
                "type": "boolean"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "offeringType": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "rates": {
                "items": {
                  "$ref": "#/components/schemas/Rate"
                },
                "type": "array"
              },
              "redemptionPenaltyDetails": {
                "type": "string"
              },
              "redemptionPenaltyEndDate": {
                "format": "date-time",
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "repaymentDueDate": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "termMonths": {
                "format": "int32",
                "type": "integer"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "LumpSumBenefit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RiskBenefit"
          },
          {
            "properties": {
              "amount": {
                "format": "double",
                "type": "number"
              },
              "associatedPartyId": {
                "format": "int32",
                "type": "integer"
              },
              "dateCurrent": {
                "format": "date-time",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "LumpSumIncome": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Income"
          },
          {
            "properties": {
              "amount": {
                "format": "double",
                "type": "number"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Metric": {
        "properties": {
          "amount": {
            "format": "double",
            "type": "number"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "enum": [
              "Unspecified",
              "GasUsageAnnual",
              "GasCostAnnual",
              "ElectricityUsageAnnual",
              "ElectricityCostAnnual"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Mortgage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "borrowedAmount": {
                "format": "double",
                "type": "number"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "creditHistories": {
                "items": {
                  "$ref": "#/components/schemas/CreditHistory"
                },
                "type": "array"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "dateRepaid": {
                "format": "date-time",
                "type": "string"
              },
              "discountReceivedAmount": {
                "format": "double",
                "type": "number"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "incomes": {
                "items": {
                  "$ref": "#/components/schemas/Income"
                },
                "type": "array"
              },
              "interestBasis": {
                "enum": [
                  "Unspecified",
                  "Capped",
                  "Discounted",
                  "Fixed",
                  "StandardVariable",
                  "Tracker",
                  "Other"
                ],
                "type": "string"
              },
              "interestOnlyRepaymentVehicle": {
                "enum": [
                  "Unspecified",
                  "Endowment",
                  "ISA",
                  "PensionPlan",
                  "Other"
                ],
                "type": "string"
              },
              "interestRate": {
                "format": "double",
                "type": "number"
              },
              "interestRateExpiryDate": {
                "format": "date-time",
                "type": "string"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isOffset": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "localAuthorityName": {
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "offeringType": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "propertyId": {
                "format": "int32",
                "type": "integer"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "rates": {
                "items": {
                  "$ref": "#/components/schemas/Rate"
                },
                "type": "array"
              },
              "redemptionPenaltyDetails": {
                "type": "string"
              },
              "redemptionPenaltyEndDate": {
                "format": "date-time",
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "repaymentDueDate": {
                "format": "date-time",
                "type": "string"
              },
              "repaymentType": {
                "enum": [
                  "Unspecified",
                  "Repayment",
                  "InterestOnly",
                  "PartRepaymentPartInterestOnly"
                ],
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "term": {
                "format": "double",
                "type": "number"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Motor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "abiModelCode": {
                "type": "string"
              },
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "colour": {
                "type": "string"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isLeased": {
                "type": "boolean"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "make": {
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "manuafacturedYear": {
                "format": "int32",
                "type": "integer"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "mileage": {
                "format": "int32",
                "type": "integer"
              },
              "mileageUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "model": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "purchasePrice": {
                "format": "double",
                "type": "number"
              },
              "reference": {
                "type": "string"
              },
              "registration": {
                "type": "string"
              },
              "registrationDate": {
                "format": "date-time",
                "type": "string"
              },
              "saleDate": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "type": {
                "enum": [
                  "Unspecified",
                  "Car",
                  "ClassicCar",
                  "Van",
                  "Motorbike",
                  "Caravan",
                  "Motorhome",
                  "Boat",
                  "Taxi",
                  "Hgv",
                  "Bus",
                  "Other"
                ],
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              },
              "vinNumber": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Notification": {
        "properties": {
          "channel": {
            "enum": [
              "Email",
              "SMS",
              "Web"
            ],
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "notes": {
            "type": "string"
          },
          "notifyDueDate": {
            "format": "date-time",
            "type": "string"
          },
          "partyToNotify": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OfferingDetail": {
        "properties": {
          "isChildItemAllowed": {
            "type": "boolean"
          },
          "isFundsAllowed": {
            "type": "boolean"
          },
          "isLOAAllowed": {
            "type": "boolean"
          },
          "isManageable": {
            "type": "boolean"
          },
          "isPaymentsAllowed": {
            "type": "boolean"
          },
          "itemType": {
            "type": "string"
          },
          "marketingName": {
            "type": "string"
          },
          "offeringId": {
            "format": "int32",
            "type": "integer"
          },
          "offeringTypeId": {
            "format": "int32",
            "type": "integer"
          },
          "offeringTypeName": {
            "type": "string"
          },
          "providerId": {
            "format": "int32",
            "type": "integer"
          },
          "providerName": {
            "type": "string"
          },
          "subType": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "OfferingType": {
        "properties": {
          "coverTypes": {
            "items": {
              "$ref": "#/components/schemas/CoverType"
            },
            "type": "array"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "isChildItemAllowed": {
            "type": "boolean"
          },
          "isFundsAllowed": {
            "type": "boolean"
          },
          "isIncomeAllowed": {
            "type": "boolean"
          },
          "isPaymentsAllowed": {
            "type": "boolean"
          },
          "isRiskCoverAllowed": {
            "type": "boolean"
          },
          "itemType": {
            "enum": [
              "Unspecified",
              "InvestmentSaving",
              "RetirementSaving",
              "BankAccount",
              "Mortgage",
              "Loan",
              "Protection",
              "Wrap",
              "CreditCard",
              "Insurance",
              "InvestmentIncome",
              "RetirementIncome",
              "Will",
              "Property",
              "CustomEquity",
              "SystemEquity",
              "Motor",
              "OtherAsset",
              "Utility",
              "Portfolio",
              "GeneralInformation",
              "OtherService",
              "Rental"
            ],
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Organisation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Party"
          },
          {
            "properties": {
              "addresses": {
                "items": {
                  "$ref": "#/components/schemas/Address"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "emails": {
                "items": {
                  "$ref": "#/components/schemas/Email"
                },
                "type": "array"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "homeCountryCode": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "identifiers": {
                "items": {
                  "$ref": "#/components/schemas/Identifier"
                },
                "type": "array"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "Provider",
                  "Referrer",
                  "User",
                  "BulkData",
                  "ContractEnquiry",
                  "Document",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Other"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "modifiedDate": {
                "format": "date-time",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "registrationNumber": {
                "type": "string"
              },
              "registrations": {
                "items": {
                  "$ref": "#/components/schemas/Registration"
                },
                "type": "array"
              },
              "relatedParties": {
                "items": {
                  "$ref": "#/components/schemas/RelatedParty"
                },
                "type": "array"
              },
              "reportSummary": {
                "$ref": "#/components/schemas/ReportSummary"
              },
              "scores": {
                "items": {
                  "$ref": "#/components/schemas/Score"
                },
                "type": "array"
              },
              "servicing": {
                "$ref": "#/components/schemas/Servicing"
              },
              "status": {
                "enum": [
                  "Active",
                  "Dissolved",
                  "Liquidated",
                  "InReceivership",
                  "InAdministration",
                  "VoluntaryArrangement",
                  "ConvertedClosed",
                  "InsolvencyProceedingsOngoing"
                ],
                "type": "string"
              },
              "structure": {
                "enum": [
                  "Unspecified",
                  "PrivateUnlimited",
                  "Limited",
                  "PLC",
                  "LimitedPartnership",
                  "ConvertedOrClosed",
                  "PrivateUnlimitedNoShareCapital",
                  "AssuranceCompany",
                  "OverseaCompany",
                  "EEIG",
                  "ICVCSecurities",
                  "ICVCWarrant",
                  "ICVCUmbrella",
                  "NorthernIreland",
                  "LLP",
                  "RoyalCharter",
                  "ICVC",
                  "UnregisteredCompany",
                  "Other",
                  "EuropeanPLCSocietasEuropaea"
                ],
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "targetUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "telephones": {
                "items": {
                  "$ref": "#/components/schemas/Telephone"
                },
                "type": "array"
              },
              "userNotes": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "OrganisationSummary": {
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "managedStage": {
            "enum": [
              "Unspecified",
              "SelfManaged",
              "AwaitingLetterOfAuthority",
              "AwaitingInitialDocumentation",
              "InitialPlanUpdateComplete",
              "InitialPlanInformationRequested",
              "DocumentReceived",
              "UpdateRequested",
              "UpdateDocumentsRequestedFromClient",
              "PlanLapsed",
              "PlanTransferredAway",
              "PlanNoLongerInForce",
              "PlanUpdateComplete",
              "FirmManaged"
            ],
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "parentOrganisationID": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OtherAsset": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isLeased": {
                "type": "boolean"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "purchasePrice": {
                "format": "double",
                "type": "number"
              },
              "reference": {
                "type": "string"
              },
              "saleDate": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "OtherService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "billDeliveryType": {
                "enum": [
                  "Unspecified",
                  "Online",
                  "Paper"
                ],
                "type": "string"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "creditHistories": {
                "items": {
                  "$ref": "#/components/schemas/CreditHistory"
                },
                "type": "array"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "endDate": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "meterType": {
                "enum": [
                  "Unspecified",
                  "Standard",
                  "Smart",
                  "Differrential",
                  "Prepayment"
                ],
                "type": "string"
              },
              "metrics": {
                "items": {
                  "$ref": "#/components/schemas/Metric"
                },
                "type": "array"
              },
              "offeringType": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "serviceOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "OwnedFund": {
        "discriminator": {
          "propertyName": "$type"
        },
        "properties": {
          "$type": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "notes": {
            "type": "string"
          },
          "originalValue": {
            "format": "double",
            "type": "number"
          },
          "purchaseDate": {
            "format": "date-time",
            "type": "string"
          },
          "purchasePrice": {
            "format": "double",
            "type": "number"
          },
          "quantity": {
            "format": "double",
            "type": "number"
          },
          "unitsCurrentDate": {
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "$type"
        ],
        "type": "object"
      },
      "OwnedHoldingCover": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RiskCover"
          },
          {
            "properties": {
              "coverType": {
                "type": "string"
              },
              "coverTypeId": {
                "format": "int32",
                "type": "integer"
              },
              "coveredLocation": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "endDate": {
                "format": "date-time",
                "type": "string"
              },
              "excessAmount": {
                "format": "double",
                "type": "number"
              },
              "exclusions": {
                "items": {
                  "$ref": "#/components/schemas/Exclusion"
                },
                "type": "array"
              },
              "holdingId": {
                "format": "int32",
                "type": "integer"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "isPersonalPossessionsCovered": {
                "type": "boolean"
              },
              "reference": {
                "type": "string"
              },
              "riskBenefit": {
                "$ref": "#/components/schemas/RiskBenefit"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "OwnedItem": {
        "discriminator": {
          "propertyName": "$type"
        },
        "properties": {
          "$type": {
            "type": "string"
          },
          "accountReference": {
            "type": "string"
          },
          "ageInMonths": {
            "format": "int32",
            "type": "integer"
          },
          "childItems": {
            "items": {
              "$ref": "#/components/schemas/OwnedItem"
            },
            "type": "array"
          },
          "createdDate": {
            "format": "date-time",
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "fee": {
            "$ref": "#/components/schemas/Fee"
          },
          "friendlyName": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "interestedParties": {
            "items": {
              "$ref": "#/components/schemas/InterestedParty"
            },
            "type": "array"
          },
          "investmentSolution": {
            "type": "string"
          },
          "isManaged": {
            "type": "boolean"
          },
          "isPartyFeeModelApplied": {
            "type": "boolean"
          },
          "isUnderAgency": {
            "type": "boolean"
          },
          "itemValidDate": {
            "format": "date-time",
            "type": "string"
          },
          "itemValidMethod": {
            "enum": [
              "Unspecified",
              "BulkData",
              "ContractEnquiry",
              "DocumentScan",
              "Extranet",
              "Manual",
              "Initial",
              "Other",
              "User",
              "Email",
              "Telephone",
              "Notes",
              "Bureau"
            ],
            "type": "string"
          },
          "managedStage": {
            "enum": [
              "Unspecified",
              "SelfManaged",
              "AwaitingLetterOfAuthority",
              "AwaitingInitialDocumentation",
              "InitialPlanUpdateComplete",
              "InitialPlanInformationRequested",
              "DocumentReceived",
              "UpdateRequested",
              "UpdateDocumentsRequestedFromClient",
              "PlanLapsed",
              "PlanTransferredAway",
              "PlanNoLongerInForce",
              "PlanUpdateComplete",
              "FirmManaged"
            ],
            "type": "string"
          },
          "marketsId": {
            "format": "int32",
            "type": "integer"
          },
          "marketsName": {
            "type": "string"
          },
          "parentId": {
            "format": "int32",
            "type": "integer"
          },
          "reference": {
            "type": "string"
          },
          "status": {
            "enum": [
              "Unspecified",
              "Current",
              "Cancelled",
              "Closed",
              "PaidUp",
              "Matured",
              "Redeemed",
              "Sold",
              "Lapsed",
              "Surrendered",
              "Transferred",
              "Archived",
              "Unreliable",
              "Pending",
              "Delinquent",
              "Default",
              "Settled"
            ],
            "type": "string"
          },
          "systemLastUpdateDate": {
            "format": "date-time",
            "type": "string"
          },
          "systemLastUpdateMethod": {
            "enum": [
              "Unspecified",
              "BulkData",
              "ContractEnquiry",
              "DocumentScan",
              "Extranet",
              "Manual",
              "Initial",
              "Other"
            ],
            "type": "string"
          },
          "systemMatchReference": {
            "type": "string"
          },
          "systemNextUpdateDate": {
            "format": "date-time",
            "type": "string"
          },
          "systemNotes": {
            "type": "string"
          },
          "userLastUpdateDate": {
            "format": "date-time",
            "type": "string"
          },
          "userNotes": {
            "type": "string"
          }
        },
        "required": [
          "$type"
        ],
        "type": "object"
      },
      "OwnedItemReferrer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InterestedParty"
          },
          {
            "properties": {
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Owner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InterestedParty"
          },
          {
            "properties": {
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "isPrimary": {
                "type": "boolean"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              },
              "proportion": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "OwnerEmployer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InterestedParty"
          },
          {
            "properties": {
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "ParentOrganisationUnit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RelatedParty"
          },
          {
            "properties": {
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "relatedPartyId": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Party": {
        "discriminator": {
          "propertyName": "$type"
        },
        "properties": {
          "$type": {
            "type": "string"
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "type": "array"
          },
          "createdDate": {
            "format": "date-time",
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "emails": {
            "items": {
              "$ref": "#/components/schemas/Email"
            },
            "type": "array"
          },
          "fee": {
            "$ref": "#/components/schemas/Fee"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "identifiers": {
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "type": "array"
          },
          "itemValidDate": {
            "format": "date-time",
            "type": "string"
          },
          "itemValidMethod": {
            "enum": [
              "Unspecified",
              "Provider",
              "Referrer",
              "User",
              "BulkData",
              "ContractEnquiry",
              "Document",
              "Extranet",
              "Manual",
              "Initial",
              "Email",
              "Telephone",
              "Notes",
              "Other"
            ],
            "type": "string"
          },
          "managedStage": {
            "enum": [
              "Unspecified",
              "FirmManaged"
            ],
            "type": "string"
          },
          "modifiedDate": {
            "format": "date-time",
            "type": "string"
          },
          "relatedParties": {
            "items": {
              "$ref": "#/components/schemas/RelatedParty"
            },
            "type": "array"
          },
          "reportSummary": {
            "$ref": "#/components/schemas/ReportSummary"
          },
          "scores": {
            "items": {
              "$ref": "#/components/schemas/Score"
            },
            "type": "array"
          },
          "servicing": {
            "$ref": "#/components/schemas/Servicing"
          },
          "systemNotes": {
            "type": "string"
          },
          "targetUpdateDate": {
            "format": "date-time",
            "type": "string"
          },
          "telephones": {
            "items": {
              "$ref": "#/components/schemas/Telephone"
            },
            "type": "array"
          },
          "userNotes": {
            "type": "string"
          }
        },
        "required": [
          "$type"
        ],
        "type": "object"
      },
      "PartyCover": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RiskCover"
          },
          {
            "properties": {
              "coverType": {
                "type": "string"
              },
              "coverTypeId": {
                "format": "int32",
                "type": "integer"
              },
              "coveredLocation": {
                "type": "string"
              },
              "endDate": {
                "format": "date-time",
                "type": "string"
              },
              "excessAmount": {
                "format": "double",
                "type": "number"
              },
              "exclusions": {
                "items": {
                  "$ref": "#/components/schemas/Exclusion"
                },
                "type": "array"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "isOwnOccupationCovered": {
                "type": "boolean"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              },
              "reference": {
                "type": "string"
              },
              "riskBenefit": {
                "$ref": "#/components/schemas/RiskBenefit"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Payment": {
        "discriminator": {
          "propertyName": "$type"
        },
        "properties": {
          "$type": {
            "type": "string"
          },
          "amount": {
            "format": "double",
            "type": "number"
          },
          "currencyCode": {
            "type": "string"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "employeeAmount": {
            "format": "double",
            "type": "number"
          },
          "employerAmount": {
            "format": "double",
            "type": "number"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "method": {
            "enum": [
              "Unspecified",
              "DirectDebit",
              "StandingOrder",
              "Cheque",
              "Cash",
              "GrossSalaryDeduction",
              "NetSalaryDeduction",
              "InlandRevenue",
              "TransferIn",
              "Prepaid",
              "OnReceipt",
              "Other"
            ],
            "type": "string"
          },
          "partyId": {
            "format": "int32",
            "type": "integer"
          },
          "percent": {
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "$type"
        ],
        "type": "object"
      },
      "Person": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Party"
          },
          {
            "properties": {
              "accountStatus": {
                "enum": [
                  "Unspecified",
                  "Active",
                  "Suspended",
                  "Defaulted",
                  "Archived"
                ],
                "type": "string"
              },
              "addresses": {
                "items": {
                  "$ref": "#/components/schemas/Address"
                },
                "type": "array"
              },
              "adverseFinancials": {
                "items": {
                  "$ref": "#/components/schemas/AdverseFinancial"
                },
                "type": "array"
              },
              "birthCountryCode": {
                "type": "string"
              },
              "ccjBalance": {
                "format": "double",
                "type": "number"
              },
              "ccjCount": {
                "format": "int32",
                "type": "integer"
              },
              "ccjLatestDate": {
                "format": "date-time",
                "type": "string"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "creditSearches": {
                "items": {
                  "$ref": "#/components/schemas/CreditSearch"
                },
                "type": "array"
              },
              "currencyCode": {
                "type": "string"
              },
              "dob": {
                "format": "date-time",
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "emails": {
                "items": {
                  "$ref": "#/components/schemas/Email"
                },
                "type": "array"
              },
              "employments": {
                "items": {
                  "$ref": "#/components/schemas/Employment"
                },
                "type": "array"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "firstName": {
                "type": "string"
              },
              "gender": {
                "enum": [
                  "Unspecified",
                  "Male",
                  "Female"
                ],
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "identifiers": {
                "items": {
                  "$ref": "#/components/schemas/Identifier"
                },
                "type": "array"
              },
              "isDeceased": {
                "type": "boolean"
              },
              "isInDebtManagement": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "Provider",
                  "Referrer",
                  "User",
                  "BulkData",
                  "ContractEnquiry",
                  "Document",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Other"
                ],
                "type": "string"
              },
              "knownAs": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "modifiedDate": {
                "format": "date-time",
                "type": "string"
              },
              "niNumber": {
                "type": "string"
              },
              "relatedParties": {
                "items": {
                  "$ref": "#/components/schemas/RelatedParty"
                },
                "type": "array"
              },
              "reportSummary": {
                "$ref": "#/components/schemas/ReportSummary"
              },
              "scores": {
                "items": {
                  "$ref": "#/components/schemas/Score"
                },
                "type": "array"
              },
              "serviceLevel": {
                "enum": [
                  "Unspecified",
                  "Limited",
                  "Basic",
                  "Standard",
                  "Premium",
                  "PremiumPlus",
                  "StandardPlus",
                  "Bespoke"
                ],
                "type": "string"
              },
              "servicing": {
                "$ref": "#/components/schemas/Servicing"
              },
              "systemNotes": {
                "type": "string"
              },
              "targetUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "taxDomicileCountryCode": {
                "type": "string"
              },
              "telephones": {
                "items": {
                  "$ref": "#/components/schemas/Telephone"
                },
                "type": "array"
              },
              "title": {
                "enum": [
                  "Unspecified",
                  "Mr",
                  "Mrs",
                  "Miss",
                  "Ms",
                  "Sir",
                  "Rev",
                  "Dr",
                  "Master",
                  "Professor",
                  "Other"
                ],
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "PersonSummary": {
        "properties": {
          "dob": {
            "format": "date-time",
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "managedStage": {
            "enum": [
              "Unspecified",
              "SelfManaged",
              "AwaitingLetterOfAuthority",
              "AwaitingInitialDocumentation",
              "InitialPlanUpdateComplete",
              "InitialPlanInformationRequested",
              "DocumentReceived",
              "UpdateRequested",
              "UpdateDocumentsRequestedFromClient",
              "PlanLapsed",
              "PlanTransferredAway",
              "PlanNoLongerInForce",
              "PlanUpdateComplete",
              "FirmManaged"
            ],
            "type": "string"
          },
          "niNumber": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "referrerId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Personal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RelatedParty"
          },
          {
            "properties": {
              "endDate": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "isDependant": {
                "type": "boolean"
              },
              "relatedPartyId": {
                "format": "int32",
                "type": "integer"
              },
              "relationship": {
                "enum": [
                  "Unspecified",
                  "Partner",
                  "Child",
                  "GrandChild",
                  "Parent",
                  "GrandParent",
                  "Other"
                ],
                "type": "string"
              },
              "startDate": {
                "format": "date-time",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Portfolio": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "purchasePrice": {
                "format": "double",
                "type": "number"
              },
              "reference": {
                "type": "string"
              },
              "saleDate": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "type": {
                "enum": [
                  "Unspecified",
                  "Share",
                  "Property",
                  "Other"
                ],
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "PowerOfAttorney": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InterestedParty"
          },
          {
            "properties": {
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Property": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "incomes": {
                "items": {
                  "$ref": "#/components/schemas/Income"
                },
                "type": "array"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isLeased": {
                "type": "boolean"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "purchasePrice": {
                "format": "double",
                "type": "number"
              },
              "reference": {
                "type": "string"
              },
              "saleDate": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Protection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "ceasedDate": {
                "format": "date-time",
                "type": "string"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "creditHistories": {
                "items": {
                  "$ref": "#/components/schemas/CreditHistory"
                },
                "type": "array"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "endDate": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "offeringType": {
                "type": "string"
              },
              "ownedFunds": {
                "items": {
                  "$ref": "#/components/schemas/OwnedFund"
                },
                "type": "array"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "providerValuationAmount": {
                "format": "double",
                "type": "number"
              },
              "providerValuationDate": {
                "format": "date-time",
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "reviewDate": {
                "format": "date-time",
                "type": "string"
              },
              "riskGroups": {
                "items": {
                  "$ref": "#/components/schemas/RiskGroup"
                },
                "type": "array"
              },
              "schemeName": {
                "type": "string"
              },
              "schemeReference": {
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Provider": {
        "properties": {
          "contacts": {
            "items": {
              "$ref": "#/components/schemas/SystemContact"
            },
            "type": "array"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "parentId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Rate": {
        "properties": {
          "apr": {
            "format": "double",
            "type": "number"
          },
          "basis": {
            "enum": [
              "Unspecified",
              "Capped",
              "Discounted",
              "Fixed",
              "Flexible",
              "Guaranteed",
              "Other",
              "StandardVariable",
              "Tracker",
              "Variable"
            ],
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "enum": [
              "Unspecified",
              "BalanceTransfer",
              "CashWithdrawal",
              "Initial",
              "IntroBalanceTransfer",
              "IntroMoneyTransfer",
              "IntroPurchase",
              "MoneyTransfer",
              "Purchase",
              "Representative",
              "Subsequent"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Referrer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RelatedParty"
          },
          {
            "properties": {
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "relatedPartyId": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Registration": {
        "properties": {
          "authority": {
            "enum": [
              "SIC",
              "CompaniesHouse",
              "VAT",
              "FinancialConductAuthority"
            ],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "reference": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RegularBenefit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RiskBenefit"
          },
          {
            "properties": {
              "amount": {
                "format": "double",
                "type": "number"
              },
              "associatedPartyId": {
                "format": "int32",
                "type": "integer"
              },
              "benefitPaymentMonths": {
                "format": "int32",
                "type": "integer"
              },
              "dateCurrent": {
                "format": "date-time",
                "type": "string"
              },
              "deferredPaymentMonths": {
                "format": "int32",
                "type": "integer"
              },
              "frequency": {
                "enum": [
                  "Unspecified",
                  "Weekly",
                  "Monthly",
                  "Quarterly",
                  "HalfYearly",
                  "Yearly",
                  "Other",
                  "None"
                ],
                "type": "string"
              },
              "isToPolicyEndDate": {
                "type": "boolean"
              },
              "paymentChangeBasis": {
                "enum": [
                  "Unspecified",
                  "RetailPriceIndex",
                  "AverageEarningsIndex",
                  "OnePercent",
                  "ThreePercent",
                  "FivePercent",
                  "FixedRate",
                  "Other",
                  "None"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "RegularIncome": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Income"
          },
          {
            "properties": {
              "amount": {
                "format": "double",
                "type": "number"
              },
              "amountChangeBasis": {
                "enum": [
                  "Unspecified",
                  "RetailPriceIndex",
                  "AverageEarningsIndex",
                  "OnePercent",
                  "ThreePercent",
                  "FivePercent",
                  "FixedRate",
                  "Other",
                  "None"
                ],
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "endDate": {
                "format": "date-time",
                "type": "string"
              },
              "frequency": {
                "enum": [
                  "Unspecified",
                  "Weekly",
                  "Monthly",
                  "Quarterly",
                  "HalfYearly",
                  "Yearly",
                  "Other",
                  "None"
                ],
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "spouseAnnuityPercent": {
                "format": "double",
                "type": "number"
              },
              "spouseBenefitAmount": {
                "format": "double",
                "type": "number"
              },
              "spouseBenefitFrequency": {
                "enum": [
                  "Unspecified",
                  "Weekly",
                  "Monthly",
                  "Quarterly",
                  "HalfYearly",
                  "Yearly",
                  "Other",
                  "None"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "RegularPayment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Payment"
          },
          {
            "properties": {
              "amount": {
                "format": "double",
                "type": "number"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "employeeAmount": {
                "format": "double",
                "type": "number"
              },
              "employerAmount": {
                "format": "double",
                "type": "number"
              },
              "endDate": {
                "format": "date-time",
                "type": "string"
              },
              "frequency": {
                "enum": [
                  "Unspecified",
                  "Weekly",
                  "Monthly",
                  "Quarterly",
                  "HalfYearly",
                  "Yearly",
                  "Other",
                  "None"
                ],
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "method": {
                "enum": [
                  "Unspecified",
                  "DirectDebit",
                  "StandingOrder",
                  "Cheque",
                  "Cash",
                  "GrossSalaryDeduction",
                  "NetSalaryDeduction",
                  "InlandRevenue",
                  "TransferIn",
                  "Prepaid",
                  "OnReceipt",
                  "Other"
                ],
                "type": "string"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              },
              "paymentChangeBasis": {
                "enum": [
                  "Unspecified",
                  "RetailPriceIndex",
                  "AverageEarningsIndex",
                  "OnePercent",
                  "ThreePercent",
                  "FivePercent",
                  "FixedRate",
                  "Other",
                  "None"
                ],
                "type": "string"
              },
              "percent": {
                "format": "double",
                "type": "number"
              },
              "premiumGuaranteeBasis": {
                "enum": [
                  "Unspecified",
                  "Guaranteed",
                  "Reviewable",
                  "Renewable",
                  "IndexationIncreaseOption",
                  "Other"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "RelatedParty": {
        "discriminator": {
          "propertyName": "$type"
        },
        "properties": {
          "$type": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "relatedPartyId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "$type"
        ],
        "type": "object"
      },
      "Rental": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "creditHistories": {
                "items": {
                  "$ref": "#/components/schemas/CreditHistory"
                },
                "type": "array"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "holdingId": {
                "format": "int32",
                "type": "integer"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "offeringType": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "ReportSummary": {
        "properties": {
          "creditSearchesInYear": {
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "isOnElectoralRoll": {
            "type": "boolean"
          },
          "itemValidDate": {
            "format": "date-time",
            "type": "string"
          },
          "itemValidMethod": {
            "enum": [
              "Unspecified",
              "BulkData",
              "ContractEnquiry",
              "DocumentScan",
              "Extranet",
              "Manual",
              "Initial",
              "Other",
              "User",
              "Email",
              "Telephone",
              "Notes",
              "Bureau"
            ],
            "type": "string"
          },
          "missedPaymentsInYear": {
            "format": "int32",
            "type": "integer"
          },
          "overduePaymentsAmount": {
            "format": "double",
            "type": "number"
          },
          "totalOwedExcludingMortgagesAmount": {
            "format": "double",
            "type": "number"
          },
          "totalOwedExcludingMortgagesCurrencyCode": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RetirementIncome": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "guaranteedPeriodEndDate": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "incomes": {
                "items": {
                  "$ref": "#/components/schemas/Income"
                },
                "type": "array"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "offeringType": {
                "type": "string"
              },
              "ownedFunds": {
                "items": {
                  "$ref": "#/components/schemas/OwnedFund"
                },
                "type": "array"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "projectedIncomeAmount": {
                "format": "double",
                "type": "number"
              },
              "projectedIncomeFrequency": {
                "enum": [
                  "Unspecified",
                  "Weekly",
                  "Monthly",
                  "Quarterly",
                  "HalfYearly",
                  "Yearly",
                  "Other",
                  "None"
                ],
                "type": "string"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "taxFreeCashTakenAmount": {
                "format": "double",
                "type": "number"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "RetirementSaving": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "deathReturnType": {
                "enum": [
                  "Unspecified",
                  "ReturnOfFundValue",
                  "ReturnOfPremiumsPaid",
                  "Other"
                ],
                "type": "string"
              },
              "earningsIncludedToDate": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "guaranteedPeriodEndDate": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "incomeFrequency": {
                "enum": [
                  "Unspecified",
                  "Weekly",
                  "Monthly",
                  "Quarterly",
                  "HalfYearly",
                  "Yearly",
                  "Other",
                  "None"
                ],
                "type": "string"
              },
              "incomes": {
                "items": {
                  "$ref": "#/components/schemas/Income"
                },
                "type": "array"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "maturityDate": {
                "format": "date-time",
                "type": "string"
              },
              "maximumIncomeAllowed": {
                "format": "double",
                "type": "number"
              },
              "nonProtectedRightsValue": {
                "format": "double",
                "type": "number"
              },
              "offeringType": {
                "type": "string"
              },
              "ownedFunds": {
                "items": {
                  "$ref": "#/components/schemas/OwnedFund"
                },
                "type": "array"
              },
              "paidUpDate": {
                "format": "date-time",
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "projectedIncomeAmount": {
                "format": "double",
                "type": "number"
              },
              "projectedIncomeFrequency": {
                "enum": [
                  "Unspecified",
                  "Weekly",
                  "Monthly",
                  "Quarterly",
                  "HalfYearly",
                  "Yearly",
                  "Other",
                  "None"
                ],
                "type": "string"
              },
              "projectedSpouseAnnuityPercent": {
                "format": "double",
                "type": "number"
              },
              "projectedSpouseBenefitAmount": {
                "format": "double",
                "type": "number"
              },
              "projectedSpouseBenefitFrequency": {
                "enum": [
                  "Unspecified",
                  "Monthly",
                  "Quarterly",
                  "HalfYearly",
                  "Yearly",
                  "Weekly",
                  "Other"
                ],
                "type": "string"
              },
              "projectedWorkYearsRemaining": {
                "format": "int32",
                "type": "integer"
              },
              "protectedRightsValue": {
                "format": "double",
                "type": "number"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "providerValuationAmount": {
                "format": "double",
                "type": "number"
              },
              "providerValuationDate": {
                "format": "date-time",
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "retirementAge": {
                "format": "int32",
                "type": "integer"
              },
              "retirementDate": {
                "format": "date-time",
                "type": "string"
              },
              "riskGroups": {
                "items": {
                  "$ref": "#/components/schemas/RiskGroup"
                },
                "type": "array"
              },
              "salary": {
                "format": "double",
                "type": "number"
              },
              "salaryDate": {
                "format": "date-time",
                "type": "string"
              },
              "schemeEmployer": {
                "type": "string"
              },
              "schemeName": {
                "type": "string"
              },
              "schemeReference": {
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "taxFreeCashTakenAmount": {
                "format": "double",
                "type": "number"
              },
              "totalPaymentsAmount": {
                "format": "double",
                "type": "number"
              },
              "totalPaymentsDate": {
                "format": "date-time",
                "type": "string"
              },
              "transferValueAmount": {
                "format": "double",
                "type": "number"
              },
              "transferValueDate": {
                "format": "date-time",
                "type": "string"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "valuationBasis": {
                "enum": [
                  "Unspecified",
                  "FinalSalary",
                  "CareerAverageEarnings",
                  "FinalSalaryAndCareerAverageEarnings",
                  "Other"
                ],
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "RiskBenefit": {
        "discriminator": {
          "propertyName": "$type"
        },
        "properties": {
          "$type": {
            "type": "string"
          },
          "amount": {
            "format": "double",
            "type": "number"
          },
          "associatedPartyId": {
            "format": "int32",
            "type": "integer"
          },
          "dateCurrent": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "$type"
        ],
        "type": "object"
      },
      "RiskCover": {
        "discriminator": {
          "propertyName": "$type"
        },
        "properties": {
          "$type": {
            "type": "string"
          },
          "coverType": {
            "type": "string"
          },
          "coverTypeId": {
            "format": "int32",
            "type": "integer"
          },
          "coveredLocation": {
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "excessAmount": {
            "format": "double",
            "type": "number"
          },
          "exclusions": {
            "items": {
              "$ref": "#/components/schemas/Exclusion"
            },
            "type": "array"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "reference": {
            "type": "string"
          },
          "riskBenefit": {
            "$ref": "#/components/schemas/RiskBenefit"
          }
        },
        "required": [
          "$type"
        ],
        "type": "object"
      },
      "RiskGroup": {
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "riskCovers": {
            "items": {
              "$ref": "#/components/schemas/RiskCover"
            },
            "type": "array"
          },
          "trigger": {
            "enum": [
              "First",
              "Last"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Salary": {
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "incomes": {
            "items": {
              "$ref": "#/components/schemas/Income"
            },
            "type": "array"
          },
          "type": {
            "enum": [
              "Unspecified",
              "Base",
              "Reference",
              "Pensionable",
              "Holiday",
              "LifeAssurance",
              "BaseNet"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Score": {
        "properties": {
          "authority": {
            "enum": [
              "ExperianEcs",
              "MercerHealth",
              "MercerMoney",
              "ExperianOrganisation",
              "ExperianAuthenticateScore"
            ],
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "itemValidDate": {
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Servicing": {
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "introductionType": {
            "enum": [
              "Unspecified",
              "Referral",
              "Lead",
              "Acquired",
              "Other"
            ],
            "type": "string"
          },
          "lastClientReportDate": {
            "format": "date-time",
            "type": "string"
          },
          "lastMeetingDate": {
            "format": "date-time",
            "type": "string"
          },
          "lastMeetingType": {
            "enum": [
              "Unspecified",
              "Initial",
              "Review",
              "NewBusiness",
              "Other"
            ],
            "type": "string"
          },
          "scheduledReviewDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SinglePayment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Payment"
          },
          {
            "properties": {
              "amount": {
                "format": "double",
                "type": "number"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "employeeAmount": {
                "format": "double",
                "type": "number"
              },
              "employerAmount": {
                "format": "double",
                "type": "number"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "method": {
                "enum": [
                  "Unspecified",
                  "DirectDebit",
                  "StandingOrder",
                  "Cheque",
                  "Cash",
                  "GrossSalaryDeduction",
                  "NetSalaryDeduction",
                  "InlandRevenue",
                  "TransferIn",
                  "Prepaid",
                  "OnReceipt",
                  "Other"
                ],
                "type": "string"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              },
              "percent": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "SystemContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Contact"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "companyName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "faxNumber": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "mobileNumber": {
                "type": "string"
              },
              "offeringId": {
                "format": "int32",
                "type": "integer"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "telephoneNumber": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "website": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "SystemEquity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "equityId": {
                "format": "int32",
                "type": "integer"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "numberOfShares": {
                "format": "double",
                "type": "number"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "purchasePrice": {
                "format": "double",
                "type": "number"
              },
              "reference": {
                "type": "string"
              },
              "saleDate": {
                "format": "date-time",
                "type": "string"
              },
              "sharesCurrentDate": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "SystemEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "properties": {
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "dueDate": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "isPartyVisible": {
                "type": "boolean"
              },
              "itemType": {
                "enum": [
                  "Unspecified",
                  "InvestmentSaving",
                  "RetirementSaving",
                  "BankAccount",
                  "Mortgage",
                  "Loan",
                  "Protection",
                  "Wrap",
                  "CreditCard",
                  "Insurance",
                  "InvestmentIncome",
                  "RetirementIncome",
                  "Will",
                  "Property",
                  "CustomEquity",
                  "SystemEquity",
                  "Motor",
                  "OtherAsset",
                  "Utility",
                  "Portfolio",
                  "GeneralInformation",
                  "OtherService",
                  "Rental"
                ],
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "notifications": {
                "items": {
                  "$ref": "#/components/schemas/Notification"
                },
                "type": "array"
              },
              "ownedItemId": {
                "format": "int32",
                "type": "integer"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              },
              "purpose": {
                "enum": [
                  "Unspecified",
                  "EndDate",
                  "GuaranteedPeriodEndDate",
                  "InterestRateExpiryDate",
                  "MaturityDate",
                  "RedemptionPenaltyEndDate",
                  "RepaymentDueDate",
                  "SalaryReviewDate",
                  "SaleDate",
                  "ReviewDate"
                ],
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "SystemFund": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedFund"
          },
          {
            "properties": {
              "currencyCode": {
                "type": "string"
              },
              "fundId": {
                "format": "int32",
                "type": "integer"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "notes": {
                "type": "string"
              },
              "originalValue": {
                "format": "double",
                "type": "number"
              },
              "purchaseDate": {
                "format": "date-time",
                "type": "string"
              },
              "purchasePrice": {
                "format": "double",
                "type": "number"
              },
              "quantity": {
                "format": "double",
                "type": "number"
              },
              "unitsCurrentDate": {
                "format": "date-time",
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Telephone": {
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "number": {
            "type": "string"
          },
          "purpose": {
            "enum": [
              "Unspecified",
              "Home",
              "Work",
              "Mobile",
              "FaxHome",
              "FaxWork",
              "Other"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Trustee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InterestedParty"
          },
          {
            "properties": {
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "UserContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Contact"
          },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "companyName": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "faxNumber": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "lastName": {
                "type": "string"
              },
              "middleName": {
                "type": "string"
              },
              "mobileNumber": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "ownedItemId": {
                "format": "int32",
                "type": "integer"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              },
              "telephoneNumber": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "website": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "UserEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "properties": {
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "dueDate": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "isPartyEditable": {
                "type": "boolean"
              },
              "isPartyVisible": {
                "type": "boolean"
              },
              "notes": {
                "type": "string"
              },
              "notifications": {
                "items": {
                  "$ref": "#/components/schemas/Notification"
                },
                "type": "array"
              },
              "ownedItemId": {
                "format": "int32",
                "type": "integer"
              },
              "partyId": {
                "format": "int32",
                "type": "integer"
              },
              "title": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "UsersInOrganisation": {
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "partyId": {
            "format": "int32",
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Utility": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "billDeliveryType": {
                "enum": [
                  "Unspecified",
                  "Online",
                  "Paper"
                ],
                "type": "string"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "creditHistories": {
                "items": {
                  "$ref": "#/components/schemas/CreditHistory"
                },
                "type": "array"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "meterType": {
                "enum": [
                  "Unspecified",
                  "Standard",
                  "Smart",
                  "Differrential",
                  "Prepayment"
                ],
                "type": "string"
              },
              "metrics": {
                "items": {
                  "$ref": "#/components/schemas/Metric"
                },
                "type": "array"
              },
              "offeringType": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "payments": {
                "items": {
                  "$ref": "#/components/schemas/Payment"
                },
                "type": "array"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "reviewDate": {
                "format": "date-time",
                "type": "string"
              },
              "serviceOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Will": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "endDate": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "reference": {
                "type": "string"
              },
              "reviewDate": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      },
      "Wrap": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OwnedItem"
          },
          {
            "properties": {
              "accountReference": {
                "type": "string"
              },
              "ageInMonths": {
                "format": "int32",
                "type": "integer"
              },
              "childItems": {
                "items": {
                  "$ref": "#/components/schemas/OwnedItem"
                },
                "type": "array"
              },
              "createdDate": {
                "format": "date-time",
                "type": "string"
              },
              "currencyCode": {
                "type": "string"
              },
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "fee": {
                "$ref": "#/components/schemas/Fee"
              },
              "friendlyName": {
                "type": "string"
              },
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "interestedParties": {
                "items": {
                  "$ref": "#/components/schemas/InterestedParty"
                },
                "type": "array"
              },
              "investmentSolution": {
                "type": "string"
              },
              "isManaged": {
                "type": "boolean"
              },
              "isPartyFeeModelApplied": {
                "type": "boolean"
              },
              "isUnderAgency": {
                "type": "boolean"
              },
              "itemValidDate": {
                "format": "date-time",
                "type": "string"
              },
              "itemValidMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other",
                  "User",
                  "Email",
                  "Telephone",
                  "Notes",
                  "Bureau"
                ],
                "type": "string"
              },
              "managedStage": {
                "enum": [
                  "Unspecified",
                  "SelfManaged",
                  "AwaitingLetterOfAuthority",
                  "AwaitingInitialDocumentation",
                  "InitialPlanUpdateComplete",
                  "InitialPlanInformationRequested",
                  "DocumentReceived",
                  "UpdateRequested",
                  "UpdateDocumentsRequestedFromClient",
                  "PlanLapsed",
                  "PlanTransferredAway",
                  "PlanNoLongerInForce",
                  "PlanUpdateComplete",
                  "FirmManaged"
                ],
                "type": "string"
              },
              "marketsId": {
                "format": "int32",
                "type": "integer"
              },
              "marketsName": {
                "type": "string"
              },
              "offeringType": {
                "type": "string"
              },
              "parentId": {
                "format": "int32",
                "type": "integer"
              },
              "productOfferingId": {
                "format": "int32",
                "type": "integer"
              },
              "providerId": {
                "format": "int32",
                "type": "integer"
              },
              "providerName": {
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "status": {
                "enum": [
                  "Unspecified",
                  "Current",
                  "Cancelled",
                  "Closed",
                  "PaidUp",
                  "Matured",
                  "Redeemed",
                  "Sold",
                  "Lapsed",
                  "Surrendered",
                  "Transferred",
                  "Archived",
                  "Unreliable",
                  "Pending",
                  "Delinquent",
                  "Default",
                  "Settled"
                ],
                "type": "string"
              },
              "systemLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemLastUpdateMethod": {
                "enum": [
                  "Unspecified",
                  "BulkData",
                  "ContractEnquiry",
                  "DocumentScan",
                  "Extranet",
                  "Manual",
                  "Initial",
                  "Other"
                ],
                "type": "string"
              },
              "systemMatchReference": {
                "type": "string"
              },
              "systemNextUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "systemNotes": {
                "type": "string"
              },
              "unlistedProviderName": {
                "type": "string"
              },
              "userLastUpdateDate": {
                "format": "date-time",
                "type": "string"
              },
              "userNotes": {
                "type": "string"
              },
              "value": {
                "format": "double",
                "type": "number"
              }
            },
            "type": "object"
          }
        ],
        "properties": {},
        "type": "object"
      }
    }
  }
}
